{"version":3,"sources":["../window.js"],"names":["app","BrowserWindow","require","path","url","React","ReactDOM","render","document","getElementById","win","createWindow","width","height","loadURL","format","pathname","join","__dirname","protocol","slashes","on","process","platform","quit"],"mappings":"AAAA,MAAM,EAACA,GAAD,EAAMC,aAAN,KAAuBC,QAAQ,UAAR,CAA7B;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,MAAME,MAAMF,QAAQ,KAAR,CAAZ;;AAEA,MAAMG,QAAQH,QAAQ,OAAR,CAAd;AACA,MAAMI,WAAYJ,QAAQ,WAAR,CAAlB;;AAEAI,SAASC,MAAT,CACI;AAAA;AAAA;AAAA;AAAA,CADJ,EAEIC,SAASC,cAAT,CAAwB,MAAxB,CAFJ;;AAKA;AACA;AACA,IAAIC,GAAJ;;AAEA,SAASC,YAAT,GAAyB;AACrB;AACAD,UAAM,IAAIT,aAAJ,CAAkB,EAACW,OAAO,GAAR,EAAaC,QAAQ,GAArB,EAAlB,CAAN;;AAEA;AACAH,QAAII,OAAJ,CAAYV,IAAIW,MAAJ,CAAW;AACnBC,kBAAUb,KAAKc,IAAL,CAAUC,SAAV,EAAqB,YAArB,CADS;AAEnBC,kBAAU,OAFS;AAGnBC,iBAAS;AAHU,KAAX,CAAZ;;AAMA;AACA;;AAEA;AACAV,QAAIW,EAAJ,CAAO,QAAP,EAAiB,MAAM;AACnB;AACA;AACA;AACAX,cAAM,IAAN;AACH,KALD;AAMH;;AAED;AACA;AACA;AACAV,IAAIqB,EAAJ,CAAO,OAAP,EAAgBV,YAAhB;;AAEA;AACAX,IAAIqB,EAAJ,CAAO,mBAAP,EAA4B,MAAM;AAC9B;AACA;AACA,QAAIC,QAAQC,QAAR,KAAqB,QAAzB,EAAmC;AAC/BvB,YAAIwB,IAAJ;AACH;AACJ,CAND;;AAQAxB,IAAIqB,EAAJ,CAAO,UAAP,EAAmB,MAAM;AACrB;AACA;AACA,QAAIX,QAAQ,IAAZ,EAAkB;AACdC;AACH;AACJ,CAND;;AAQA;AACA","file":"window.js","sourcesContent":["const {app, BrowserWindow} = require('electron')\nconst path = require('path')\nconst url = require('url')\n\nconst React = require('react');\nconst ReactDOM  = require('react-dom');\n\nReactDOM.render(\n    <h1>Hello, world!</h1>,\n    document.getElementById('root')\n);\n\n// Keep a global reference of the window object, if you don't, the window will\n// be closed automatically when the JavaScript object is garbage collected.\nlet win\n\nfunction createWindow () {\n    // Create the browser window.\n    win = new BrowserWindow({width: 500, height: 700})\n\n    // and load the index.html of the app.\n    win.loadURL(url.format({\n        pathname: path.join(__dirname, 'index.html'),\n        protocol: 'file:',\n        slashes: true\n    }))\n\n    // Open the DevTools.\n    //win.webContents.openDevTools()\n\n    // Emitted when the window is closed.\n    win.on('closed', () => {\n        // Dereference the window object, usually you would store windows\n        // in an array if your app supports multi windows, this is the time\n        // when you should delete the corresponding element.\n        win = null\n    })\n}\n\n// This method will be called when Electron has finished\n// initialization and is ready to create browser windows.\n// Some APIs can only be used after this event occurs.\napp.on('ready', createWindow)\n\n// Quit when all windows are closed.\napp.on('window-all-closed', () => {\n    // On macOS it is common for applications and their menu bar\n    // to stay active until the user quits explicitly with Cmd + Q\n    if (process.platform !== 'darwin') {\n        app.quit()\n    }\n})\n\napp.on('activate', () => {\n    // On macOS it's common to re-create a window in the app when the\n    // dock icon is clicked and there are no other windows open.\n    if (win === null) {\n        createWindow()\n    }\n})\n\n// In this file you can include the rest of your app's specific main process\n// code. You can also put them in separate files and require them here."]}