{"version":3,"sources":["../window.js"],"names":["app","BrowserWindow","require","path","url","React","ReactDOM","render","createElement","document","getElementById","win","createWindow","width","height","loadURL","format","pathname","join","__dirname","protocol","slashes","on","process","platform","quit"],"mappings":"AAAA,MAAM,EAAEA,GAAF,EAAOC,aAAP,KAAyBC,QAAQ,UAAR,CAA/B;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,MAAME,MAAMF,QAAQ,KAAR,CAAZ;;AAEA,MAAMG,QAAQH,QAAQ,OAAR,CAAd;AACA,MAAMI,WAAWJ,QAAQ,WAAR,CAAjB;;AAEAI,SAASC,MAAT,CAAgBF,MAAMG,aAAN,CAAoB,IAApB,EAA0B,IAA1B,EAAgC,eAAhC,CAAhB,EAAkEC,SAASC,cAAT,CAAwB,MAAxB,CAAlE;;AAEA;AACA;AACA,IAAIC,GAAJ;;AAEA,SAASC,YAAT,GAAwB;AACpB;AACAD,UAAM,IAAIV,aAAJ,CAAkB,EAAEY,OAAO,GAAT,EAAcC,QAAQ,GAAtB,EAAlB,CAAN;;AAEA;AACAH,QAAII,OAAJ,CAAYX,IAAIY,MAAJ,CAAW;AACnBC,kBAAUd,KAAKe,IAAL,CAAUC,SAAV,EAAqB,YAArB,CADS;AAEnBC,kBAAU,OAFS;AAGnBC,iBAAS;AAHU,KAAX,CAAZ;;AAMA;AACA;;AAEA;AACAV,QAAIW,EAAJ,CAAO,QAAP,EAAiB,MAAM;AACnB;AACA;AACA;AACAX,cAAM,IAAN;AACH,KALD;AAMH;;AAED;AACA;AACA;AACAX,IAAIsB,EAAJ,CAAO,OAAP,EAAgBV,YAAhB;;AAEA;AACAZ,IAAIsB,EAAJ,CAAO,mBAAP,EAA4B,MAAM;AAC9B;AACA;AACA,QAAIC,QAAQC,QAAR,KAAqB,QAAzB,EAAmC;AAC/BxB,YAAIyB,IAAJ;AACH;AACJ,CAND;;AAQAzB,IAAIsB,EAAJ,CAAO,UAAP,EAAmB,MAAM;AACrB;AACA;AACA,QAAIX,QAAQ,IAAZ,EAAkB;AACdC;AACH;AACJ,CAND;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA","file":"window.js","sourcesContent":["const { app, BrowserWindow } = require('electron');\nconst path = require('path');\nconst url = require('url');\n\nconst React = require('react');\nconst ReactDOM = require('react-dom');\n\nReactDOM.render(React.createElement('h1', null, 'Hello, world!'), document.getElementById('root'));\n\n// Keep a global reference of the window object, if you don't, the window will\n// be closed automatically when the JavaScript object is garbage collected.\nlet win;\n\nfunction createWindow() {\n    // Create the browser window.\n    win = new BrowserWindow({ width: 500, height: 700 });\n\n    // and load the index.html of the app.\n    win.loadURL(url.format({\n        pathname: path.join(__dirname, 'index.html'),\n        protocol: 'file:',\n        slashes: true\n    }));\n\n    // Open the DevTools.\n    //win.webContents.openDevTools()\n\n    // Emitted when the window is closed.\n    win.on('closed', () => {\n        // Dereference the window object, usually you would store windows\n        // in an array if your app supports multi windows, this is the time\n        // when you should delete the corresponding element.\n        win = null;\n    });\n}\n\n// This method will be called when Electron has finished\n// initialization and is ready to create browser windows.\n// Some APIs can only be used after this event occurs.\napp.on('ready', createWindow);\n\n// Quit when all windows are closed.\napp.on('window-all-closed', () => {\n    // On macOS it is common for applications and their menu bar\n    // to stay active until the user quits explicitly with Cmd + Q\n    if (process.platform !== 'darwin') {\n        app.quit();\n    }\n});\n\napp.on('activate', () => {\n    // On macOS it's common to re-create a window in the app when the\n    // dock icon is clicked and there are no other windows open.\n    if (win === null) {\n        createWindow();\n    }\n});\n\n// In this file you can include the rest of your app's specific main process\n// code. You can also put them in separate files and require them here.\n//# sourceMappingURL=window.js.map\n//# sourceMappingURL=window.js.map\n//# sourceMappingURL=window.js.map\n//# sourceMappingURL=window.js.map\n//# sourceMappingURL=window.js.map"]}